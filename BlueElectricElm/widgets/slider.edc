group { name: "elm/slider/hidden/limit";
   parts {
      part { name: "elm.units.min";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 1 1;
               align: 0.0 0.5;
            }
         }
      }
      part { name: "elm.units.max";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 1 1;
               align: 0.0 0.5;
            }
         }
      }
   }
}

group { name: "elm/slider/horizontal/default";
   alias: "elm/slider/horizontal/disabled";
   images {
      image: "sl_bg.png" COMP;
      image: "sl_bg_over.png" COMP;

      image: "sl_units.png" COMP;
   }
   parts {
      alias: "default" "elm.text";
      part { name: "base";
         mouse_events: 0;
         description { state: "default" 0.0;
            max: 99999 6;
            min: 0 6;
            rel1 { to: "bg";
               offset: 1 0;
            }
            rel2 { to: "bg";
               offset: -2 -1;
            }
            image.normal: "sl_bg.png";
            fill.smooth: 0;
         }
      }
      part { name: "level";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.5 1.0;
            }
            color: 255 0 0 200;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 0 0 100;
         }
         description { state: "disabled_inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "level2";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.5 0.0;
            }
            rel2.to: "base";
            color: 255 0 0 200;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled_inverted" 0.0;
            inherit: "default" 0.0;
            color: 255 0 0 100;
            visible: 1;
         }
      }
      part {
         name: "base_over";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: -1 -1;
            rel2.to: "base";
            rel2.offset: 0 0;
            image {
               normal: "sl_bg_over.png";
               border: 3 3 3 3;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.bar";
            rel2.to: "elm.swallow.bar";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.bar";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: 48 24;
            max: 99999 24;
            align: 1.0 0.5;
            rel1 {
               to_x: "elm.text";
               relative: 1.0 0.0;
               offset: 8 0;
            }
            rel2 {
               to_x: "limits";
               relative: 0.0 1.0;
               offset: -10 -1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {
               offset: 4 0;
               to_y: "elm.swallow.bar";
            }
            rel2 {
               offset: 3 -1;
               relative: 0.0 1.0;
               to_y: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel2.offset: 4 -1;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to_x: "elm.swallow.icon";
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 4;
            rel2.to_x: "elm.swallow.icon";
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -5;
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            rel1.offset: 0 4;
            rel2.offset: 0 -5;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 128 128 128;
            visible: 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part {
         name: "elm.swallow.end";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            rel1 {
               offset: -4 0;
               relative: 1.0 0.0;
               to_y: "elm.swallow.bar";
            }
            rel2 {
               offset: -3 -1;
               to_y: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel2.offset: -4 -1;
         }
      }
      part { name: "units";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "limits";
               offset: 0 3;
            }
            rel2 {
               to_x: "limits";
               offset: 5 -1;
            }
            image {
               normal: "sl_units.png";
               border: 0 5 3 8;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      alias: "elm.units.min" "limits:elm.units.min";
      alias: "elm.units.max" "limits:elm.units.max";
      part { name: "limits";
         type: GROUP;
         source: "elm/slider/hidden/limit";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            min: SOURCE;
            fixed: 1 1;
            rel1.to_x: "elm.swallow.end";
            rel1.relative: 0.0 0.0;
            rel1.offset: 0 8;
            rel2.to_x: "elm.swallow.end";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -9;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1.offset: -5 0;
            rel2.offset: -5 -1;
         }
      }
      part { name: "elm.units";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1.to_x: "limits";
            rel2.to_x: "limits";
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               align: 1.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 128 128 128;
            visible: 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "button";
         type: GROUP;
         source: "elm/slider/horizontal/indicator/default";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.dragable.slider";
         type: RECT;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "bg";
         }
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 1;
            rel1 {
               relative: 0.5 0.0;
               to_x: "bg";
            }
            rel2 {
               relative: 0.5 1.0;
               to_x: "bg";
            }
            color: 0 0 0 0;
         }
      }
      part { name: "slideevent";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         dragable.events: "elm.dragable.slider";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 24 24;
            max: 24 24;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.track.slider";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            max: 0 0;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "indicator_show";
         signal: "elm,state,indicator,show";
         source: "elm";
         action:  SIGNAL_EMIT "popup,show" "elm";
         after: "popup_show2";
      }
      program { name: "indicator_hide";
         signal: "elm,state,indicator,hide";
         source: "elm";
         action:  SIGNAL_EMIT "popup,hide" "elm";
         after: "popup_hide2";
      }
      program { name: "popup_show";
         signal: "mouse,down,1";
         source: "slideevent";
         action:  SIGNAL_EMIT "popup,show" "elm";
         after: "popup_show2";
      }
      program { name: "popup_show2";
         action:  STATE_SET "hidden" 0.0;
         target: "button";
      }
      program { name: "popup_hide";
         signal: "mouse,up,1";
         source: "slideevent";
         action:  SIGNAL_EMIT "popup,hide" "elm";
         after: "popup_hide2";
      }
      program { name: "popup_hide2";
         action:  STATE_SET "default" 0.0;
         target: "button";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "end_show";
         signal: "elm,state,end,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "end_hide";
         signal: "elm,state,end,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.units";
         target: "limits";
         target: "units";
         after: "limits,children,visible";
      }
      program { name: "limits,children,visible";
         action: SIGNAL_EMIT "limits:limits,visible" "elm";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.units";
         target: "limits";
         target: "units";
         after: "limits,children,hide";
      }
      program { name: "limits,children,hide";
         action: SIGNAL_EMIT "limits:limits,hide" "elm";
      }
      program { name: "invert_on";
         signal: "elm,state,inverted,on";
         source: "elm";
         action:  STATE_SET "inverted" 0.0;
         target: "level";
         target: "level2";
      }
      program { name: "invert_off";
         signal: "elm,state,inverted,off";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "level";
         target: "level2";
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
                  //            target: "button0";
         target: "disabler";
         after: "disable_text";
         after: "disable_ind";
      }

      program { name: "disable_ind";
         action: SIGNAL_EMIT "elm.dragable.slider:elm,state,disabled" "elm";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
            set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.units", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.units", "disabled_visible", 0.0);
            else
            set_state(PART:"elm.units", "disabled", 0.0);

            get_state(PART:"level2", st, 30, vl);
            if (!strcmp(st, "inverted"))
            {
               set_state(PART:"level", "disabled_inverted", 0.0);
               set_state(PART:"level2", "disabled_inverted", 0.0);
            }
            else
            {
               set_state(PART:"level", "disabled", 0.0);
               set_state(PART:"level2", "disabled", 0.0);
            }
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
                 //            target: "button0";
         target: "disabler";
         after: "enable_text";
         after: "enable_ind";
      }

      program { name: "enable_ind";
         action: SIGNAL_EMIT "elm.dragable.slider:elm,state,enabled" "elm";
      }

      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
            set_state(PART:"elm.text", "visible", 0.0);
            else
            set_state(PART:"elm.text", "default", 0.0);

            get_state(PART:"elm.units", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
            set_state(PART:"elm.units", "visible", 0.0);
            else
            set_state(PART:"elm.units", "default", 0.0);

            get_state(PART:"level2", st, 30, vl);
            if (!strcmp(st, "disabled_inverted"))
            {
               set_state(PART:"level", "inverted", 0.0);
               set_state(PART:"level2", "inverted", 0.0);
            }
            else
            {
               set_state(PART:"level", "default", 0.0);
               set_state(PART:"level2", "default", 0.0);
            }
         }
      }
   }
}

group { name: "elm/slider/vertical/default";
   images {
      image: "slv_bg.png" COMP;
      image: "slv_bg_over.png" COMP;

      image: "slv_units.png" COMP;
   }
   parts {
      alias: "default" "elm.text";
      part { name: "base";
         mouse_events: 0;
         description { state: "default" 0.0;
            max: 6 99999;
            min: 6 0;
            rel1 { to: "bg";
               offset: 1 0;
            }
            rel2 { to: "bg";
               offset: -2 -1;
            }
            image.normal: "slv_bg.png";
            fill.smooth: 0;
         }
      }
      part { name: "level";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2 {
               to_x: "base";
               to_y: "elm.dragable.slider";
               relative: 1.0 0.5;
            }
            color: 255 0 0 200;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 0 0 100;
         }
         description { state: "disabled_inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "level2";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to_x: "base";
               to_y: "elm.dragable.slider";
               relative: 0.0 0.5;
            }
            rel2.to: "base";
            color: 255 0 0 200;
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 0 0 100;
         }
         description { state: "disabled_inverted" 0.0;
            inherit: "default" 0.0;
            color: 255 0 0 100;
            visible: 1;
         }
      }
      part {
         name: "base_over";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: -1 -1;
            rel2.to: "base";
            rel2.offset: 0 0;
            image {
               normal: "slv_bg_over.png";
               border: 3 3 3 3;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.bar";
            rel2.to: "elm.swallow.bar";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.bar";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: 24 48;
            max: 24 9999;
            align: 0.5 1.0;
            rel1 {
               to_y: "elm.text";
               relative: 0.0 1.0;
               offset: 0 10;
            }
            rel2 {
               to_y: "limits";
               relative: 1.0 0.0;
               offset: -1 -8;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.0;
            rel1 {
               offset: 0 4;
               to_x: "elm.swallow.bar";
            }
            rel2 {
               offset: -1 3;
               relative: 1.0 0.0;
               to_x: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            rel2.offset: -1 4;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 0 1;
            align: 0.5 0.0;
            rel1.to_y: "elm.swallow.icon";
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.to_y: "elm.swallow.icon";
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               align: 0.5 0.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            rel1.offset: 4 0;
            rel2.offset: -5 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 128 128 128;
            visible: 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part {
         name: "elm.swallow.end";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            visible: 0;
            align: 0.5 1.0;
            rel1 {
               offset: 0 -4;
               relative: 0.0 1.0;
               to_x: "elm.swallow.bar";
            }
            rel2 {
               offset: -1 -3;
               to_x: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            rel2.offset: -1 -4;
         }
      }
      part { name: "units";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "limits";
               offset: -8 0;
            }
            rel2 {
               to: "limits";
               offset: 7 8;
            }
            image {
               normal: "slv_units.png";
               border: 8 8 0 9;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "limits";
         type: GROUP;
         source: "elm/slider/hidden/limit";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            min: SOURCE;
            align: 0.5 1.0;
            rel1.to_y: "elm.swallow.end";
            rel1.relative: 0.0 0.0;
            rel1.offset: 8 0;
            rel2.to_y: "elm.swallow.end";
            rel2.relative: 1.0 0.0;
            rel2.offset: -9 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1.offset: 8 -9;
            rel2.offset: -9 -9;
         }
      }
      alias: "elm.units.min" "limits:elm.units.min";
      alias: "elm.units.max" "limits:elm.units.max";
      part { name: "elm.units";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1.to: "limits";
            rel2.to: "limits";
            color: 0 0 0 255;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               align: 0.5 0.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color:  255 128 128 128;
            visible: 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            color: 0 0 0 128;
            color3: 0 0 0 0;
         }
      }
      part { name: "button";
         type: GROUP;
         source: "elm/slider/horizontal/indicator/default";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.dragable.slider";
         type: RECT;
         scale: 1;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "bg";
         }
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.5;
               to_x: "bg";
            }
            rel2 {
               relative: 1.0 0.5;
               to_x: "bg";
            }
            color: 0 0 0 0;
         }
      }
      part { name: "slideevent";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         dragable.events: "elm.dragable.slider";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 24 24;
            max: 24 24;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.track.slider";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            max: 0 0;
            rel1.to: "elm.dragable.slider";
            rel2.to: "elm.dragable.slider";
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }

   programs {
      program { name: "indicator_show";
         signal: "elm,state,indicator,show";
         source: "elm";
         action:  SIGNAL_EMIT "popup,show" "elm";
         after: "popup_show2";
      }
      program { name: "indicator_hide";
         signal: "elm,state,indicator,hide";
         source: "elm";
         action:  SIGNAL_EMIT "popup,hide" "elm";
         after: "popup_hide2";
      }
      program { name: "popup_show";
         signal: "mouse,down,1";
         source: "slideevent";
         action:  SIGNAL_EMIT "popup,show" "elm";
         after: "popup_show2";
      }
      program { name: "popup_show2";
         action:  STATE_SET "hidden" 0.0;
         target: "button";
      }
      program { name: "popup_hide";
         signal: "mouse,up,1";
         source: "slideevent";
         action:  SIGNAL_EMIT "popup,hide" "elm";
         after: "popup_hide2";
      }
      program { name: "popup_hide2";
         action:  STATE_SET "default" 0.0;
         target: "button";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "end_show";
         signal: "elm,state,end,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "end_hide";
         signal: "elm,state,end,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.units";
         target: "limits";
         target: "units";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.units";
         target: "limits";
         target: "units";
         after: "limits,children,hide";
      }
      program { name: "limits,children,hide";
         action: SIGNAL_EMIT "limits:limits,hide" "elm";
      }
      program { name: "invert_on";
         signal: "elm,state,inverted,on";
         source: "elm";
         action:  STATE_SET "inverted" 0.0;
         target: "level";
         target: "level2";
      }
      program { name: "invert_off";
         signal: "elm,state,inverted,off";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "level";
         target: "level2";
      }
      program {
         name:   "go_disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
                 //            target: "button0";
         target: "disabler";
         after: "disable_text";
         after: "disable_ind";
      }

      program { name: "disable_ind";
         action: SIGNAL_EMIT "elm.dragable.slider:elm,state,disabled" "elm";
      }

      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
            set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.units", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.units", "disabled_visible", 0.0);
            else
            set_state(PART:"elm.units", "disabled", 0.0);

            get_state(PART:"level2", st, 30, vl);
            if (!strcmp(st, "inverted"))
            {
               set_state(PART:"level", "disabled_inverted", 0.0);
               set_state(PART:"level2", "disabled_inverted", 0.0);
            }
            else
            {
               set_state(PART:"level", "disabled", 0.0);
               set_state(PART:"level2", "disabled", 0.0);
            }
         }
      }

      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
                 //            target: "button0";
         target: "disabler";
         after: "enable_text";
         after: "enable_ind";
      }

      program { name: "enable_ind";
         action: SIGNAL_EMIT "elm.dragable.slider:elm,state,enabled" "elm";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
            set_state(PART:"elm.text", "visible", 0.0);
            else
            set_state(PART:"elm.text", "default", 0.0);

            get_state(PART:"elm.units", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
            set_state(PART:"elm.units", "visible", 0.0);
            else
            set_state(PART:"elm.units", "default", 0.0);

            get_state(PART:"level2", st, 30, vl);
            if (!strcmp(st, "disabled_inverted"))
            {
               set_state(PART:"level", "inverted", 0.0);
               set_state(PART:"level2", "inverted", 0.0);
            }
            else
            {
               set_state(PART:"level", "default", 0.0);
               set_state(PART:"level2", "default", 0.0);
            }
         }
      }
   }
}
group { name: "elm/slider/horizontal/indicator/default";
   alias: "elm/slider/horizontal/indicator/disabled";
   alias: "elm/slider/vertical/indicator/default";
   alias: "elm/slider/vertical/indicator/disabled";
   
   alias: "elm/slider/horizontal/popup/default";
   alias: "elm/slider/vertical/popup/default";
   
   images {
      image: "sl_bt_0.png" COMP;
      image: "sl_bt_1.png" COMP;
      image: "sl_bt_2.png" COMP;
      image: "sl_bt_3.png" COMP;
      image: "sl_bt2_0_0.png" COMP;
      image: "sl_bt2_0_1.png" COMP;
      image: "sl_bt2_0_2.png" COMP;
      image: "sl_bt2_1.png" COMP;
      image: "sl_bt2_2.png" COMP;
   }
   script {
      public value_hide = 0;
      public set_value_show() {
         set_int(value_hide, 0);
      }
      public set_value_hide() {
         set_int(value_hide, 1);
      }
      public thumb_down() {
         if (get_int(value_hide) == 1) {
            set_state(PART:"elm.indicator", "default", 0.0);
            set_state(PART:"button3", "default", 0.0);
            set_state(PART:"button4", "default", 0.0);
            set_state(PART:"button5", "default", 0.0);
            set_state(PART:"button6", "default", 0.0);
            set_state(PART:"button7", "default", 0.0);
         } else {
            set_state(PART:"elm.indicator", "visible", 0.0);
            set_state(PART:"button3", "visible", 0.0);
            set_state(PART:"button4", "visible", 0.0);
            set_state(PART:"button5", "visible", 0.0);
            set_state(PART:"button6", "visible", 0.0);
            set_state(PART:"button7", "visible", 0.0);
         }
      }
      public thumb_up() {
         set_state(PART:"elm.indicator", "default", 0.0);
         set_state(PART:"button3", "default", 0.0);
         set_state(PART:"button4", "default", 0.0);
         set_state(PART:"button5", "default", 0.0);
         set_state(PART:"button6", "default", 0.0);
         set_state(PART:"button7", "default", 0.0);
      }
   }
   parts {
      part { name: "button_events";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 16 16;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "button0";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            max: 17 999;
            min: 17 24;
            image {
               normal: "sl_bt_0.png";
               border: 5 5 5 10;
            }
            fill.smooth: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "sl_bt_3.png";
               border: 5 5 5 10;
            }
         }
      }
      part { name: "button1";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "button0";
            rel2 {
               to: "button0";
               relative: 1.0 0.5;
               offset: -1 -5;
            }
            image {
               normal: "sl_bt_1.png";
               border: 5 5 5 0;
            }
         }
      }
      part { name: "button2";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "button0";
            rel2.to: "button0";
            image {
               normal: "sl_bt_2.png";
               border: 5 5 5 10;
            }
            fill.smooth: 0;
         }
      }
      part { name: "button3";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 8 32;
            align: 1.0 0.5;
            rel1 {
               to_x: "elm.indicator";
               to_y: "button4";
               relative: 0.0 0.0;
               offset: -7 0;
            }
            rel2 {
               to: "button4";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
            image {
               normal: "sl_bt2_0_0.png";
               border: 6 0 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button4";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            max: 15 999;
            min: 15 32;
            rel1 {
               to_x: "button0";
               to_y: "elm.indicator";
               offset: 0 0;
            }
            rel2.to: "button0";
            image {
               normal: "sl_bt2_0_1.png";
               border: 0 0 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button5";
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 8 32;
            align: 0.0 0.5;
            rel1 {
               to: "button4";
               relative: 1.0 0.0;
               offset: 0 0;
            }
            rel2 {
               to_x: "elm.indicator";
               to_y: "button4";
               relative: 1.0 1.0;
               offset: 6 -1;
            }
            image {
               normal: "sl_bt2_0_2.png";
               border: 0 6 6 12;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.indicator";
         type: TEXT;
         mouse_events: 0;
         effect: SOFT_SHADOW;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.5 1.0;
            rel1 {
               to: "button0";
               relative: 0.0 -0.25;
               offset: 0 0;
            }
            rel2 {
               to_x: "button0";
               relative: 1.0 -0.25;
               offset: -1 0;
            }
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font:     "Sans,Edje-Vera";
               size:     10;
               min:      0 0;
               align:    0.5 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            rel1.offset: 0 -1;
            rel2.offset: -1 -1;
         }
      }
      part { name: "button6";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "button3";
            rel2 {
               to: "button5";
               relative: 1.0 0.3;
               offset: -1 -1;
            }
            image {
               normal: "sl_bt2_1.png";
               border: 5 5 5 0;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button7";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "button3";
            rel2.to: "button5";
            image {
               normal: "sl_bt2_2.png";
               border: 5 5 5 0;
               middle: 0;
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "popup_show";
         signal: "popup,show";
         source: "elm";
         script {
            thumb_down();
         }
      }
      program { name: "popup_hide";
         signal: "popup,hide";
         source: "elm";
         action:  SIGNAL_EMIT "popup,hide,done" "elm";
      }
      program { name: "popup_hide2";
         signal: "popup,hide";
         source: "elm";
         script {
            thumb_up();
         }
      }
      program { name: "set_val_show";
         signal: "elm,state,val,show";
         source: "elm";
         script {
            set_value_show();
         }
      }
      program { name: "set_val_hide";
         signal: "elm,state,val,hide";
         source: "elm";
         script {
            set_value_hide();
         }
      }
      program { name: "val_show";
         signal: "mouse,down,*";
         source: "button_events";
         script {
            thumb_down();
         }
      }
      program { name: "val_hide";
         signal: "mouse,up,*";
         source: "button_events";
         script {
            thumb_up();
         }
      }
      program { name: "indicator_show";
         signal: "elm,state,indicator,show";
         source: "elm";
         script {
            thumb_down();
         }
      }
      program { name: "indicator_hide";
         signal: "elm,state,indicator,hide";
         source: "elm";
         script {
            thumb_up();
         }
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "button0";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "button0";
      }
   }
}


